{"version":3,"sources":["../../../src/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function(){\n\n\t// Library depencencies\n\tvar Application = include('springroll.Application'),\n\t\tTexture = include('PIXI.Texture'),\n\t\tPixiDisplay = include('springroll.pixi.PixiDisplay'),\n\t\tPixiButton = include('springroll.pixi.Button'),\n\t\tjQuery = include(\"jQuery\"),\n\t\tsaveAs = include(\"saveAs\"),\n\t\ttelemetry = include('tptTelemetry');\n\n\t// Create a new application\n\tvar app = new Application({\n\t\tname: \"pixispring\",\n\t\tdebug: true,\n\t\tpreload: [\n\t\t\t{\n\t\t\t\tid: \"PixiAssets\",\n\t\t\t\timage: 'assets/images/button.png',\n\t\t\t\tatlas: 'assets/images/button.json',\n\t\t\t\ttype: 'pixi'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'Button',\n\t\t\t\tsrc: 'assets/images/button.png'\n\t\t\t}\n\t\t]\n\t});\n\n\t// Handle when app is ready to use\n\tapp.on('init', function()\n\t{\n\t\tthis.initPixi();\n\t\ttptTelemetry.createEvent(this, \"start_game\");\n\t});\n\t\n\t\n\tapp.initPixi = function()\n\t{\n\t\tvar display = this.addDisplay(\"stage\", PixiDisplay, {\n\t\t\tclearView: true,\n\t\t\twidth: 1047,\n\t\t\tbackgroundColor: 0xccddff\n\t\t});\n\t\n\t\t// Setup the toggle button\n\t\tvar texture = this.getCache('PixiAssets');\n\t\tvar button = new PixiButton(\n\t\t\t{\n\t\t\t\tup : texture.getFrame('button_up'),\n\t\t\t\tover : texture.getFrame('button_over'),\n\t\t\t\tdown : texture.getFrame('button_down'),\n\t\t\t\tdisabled : texture.getFrame('button_disabled')\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext : 'button',\n\t\t\t\tstyle : {\n\t\t\t\t\tfont : '20px Arial',\n\t\t\t\t\tfill : \"#ffffff\"\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tbutton.position.x = (display.width - button.width) / 2;\n\t\tbutton.position.y = (display.height - button.height) / 2;\n\t\tbutton.on('buttonPress', this.toggleDisplay.bind(this, false));\n\n\t\tdisplay.stage.addChild(button);\n\t};\n\t\n\tapp.toggleDisplay = function(showPixi)\n\t{\n\t\tconsole.log(\"Pressed the button\");\n\t\tstage.enabled = showPixi;\n\t\tstage.visible = showPixi;\n\t};\n\t\n}());"]}